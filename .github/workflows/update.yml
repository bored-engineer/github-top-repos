name: Update
on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        uses: actions/setup-go@v5
      - name: Build
        run: go build -v .
      - name: Scrape
        env:
          # We split requests across a couple of different GitHub Apps
          GH_APP_ID_1: ${{ vars.GH_APP_ID_1 }}
          GH_APP_ID_2: ${{ vars.GH_APP_ID_2 }}
          GH_APP_ID_3: ${{ vars.GH_APP_ID_3 }}
          GH_APP_ID_4: ${{ vars.GH_APP_ID_4 }}
          GH_APP_ID_5: ${{ vars.GH_APP_ID_5 }}
          GH_APP_ID_6: ${{ vars.GH_APP_ID_6 }}
          GH_APP_ID_7: ${{ vars.GH_APP_ID_7 }}
          GH_APP_ID_8: ${{ vars.GH_APP_ID_8 }}
          GH_APP_INSTALLATION_ID_1: ${{ vars.GH_APP_INSTALLATION_ID_1 }}
          GH_APP_INSTALLATION_ID_2: ${{ vars.GH_APP_INSTALLATION_ID_2 }}
          GH_APP_INSTALLATION_ID_3: ${{ vars.GH_APP_INSTALLATION_ID_3 }}
          GH_APP_INSTALLATION_ID_4: ${{ vars.GH_APP_INSTALLATION_ID_4 }}
          GH_APP_INSTALLATION_ID_5: ${{ vars.GH_APP_INSTALLATION_ID_5 }}
          GH_APP_INSTALLATION_ID_6: ${{ vars.GH_APP_INSTALLATION_ID_6 }}
          GH_APP_INSTALLATION_ID_7: ${{ vars.GH_APP_INSTALLATION_ID_7 }}
          GH_APP_INSTALLATION_ID_8: ${{ vars.GH_APP_INSTALLATION_ID_8 }}
          GH_APP_PRIVATE_KEY_1: ${{ secrets.GH_APP_PRIVATE_KEY_1 }}
          GH_APP_PRIVATE_KEY_2: ${{ secrets.GH_APP_PRIVATE_KEY_2 }}
          GH_APP_PRIVATE_KEY_3: ${{ secrets.GH_APP_PRIVATE_KEY_3 }}
          GH_APP_PRIVATE_KEY_4: ${{ secrets.GH_APP_PRIVATE_KEY_4 }}
          GH_APP_PRIVATE_KEY_5: ${{ secrets.GH_APP_PRIVATE_KEY_5 }}
          GH_APP_PRIVATE_KEY_6: ${{ secrets.GH_APP_PRIVATE_KEY_6 }}
          GH_APP_PRIVATE_KEY_7: ${{ secrets.GH_APP_PRIVATE_KEY_7 }}
          GH_APP_PRIVATE_KEY_8: ${{ secrets.GH_APP_PRIVATE_KEY_8 }}
        run: |
          seq 2007 $(date '+%Y') | parallel --line-buffer --jobs=8 'GH_APP_ID=$GH_APP_ID_{%} GH_APP_INSTALLATION_ID=$GH_APP_INSTALLATION_ID_{%} GH_APP_PRIVATE_KEY=$GH_APP_PRIVATE_KEY_{%} ./github-top-repos --query "stars:>=10 sort:stars-desc" --start "{}-01-01" --end "{}-12-31" > {}.csv'
      - name: Merge
        run: |
          echo "owner,name,id,stars,forks,size,created_at,updated_at,pushed_at,archived_at" > all.csv
          sort --field-separator=, --numeric-sort --reverse --key=4 20*.csv >> all.csv
          head -n1001 all.csv > top-1000.csv
      - name: Compress
        run: |
          gzip -9 all.csv
      - name: Commit
        run: |
          git config --global user.name "Luke Young"
          git config --global user.email "541842+bored-engineer@users.noreply.github.com"
          git add top*.csv
          git commit -m "Update: $(date) -> Action URL: ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
          git push
      - name: Generate Tag
        run: |
          echo "TAG_NAME=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create \
            --repo "$GITHUB_REPOSITORY" \
            --title "$TAG_NAME" \
            --notes "Action URL: ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" \
            "$TAG_NAME"
      - name: Upload Artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          sleep 10
          gh release upload \
            --repo "$GITHUB_REPOSITORY" \
            "$TAG_NAME" \
            "all.csv.gz"
